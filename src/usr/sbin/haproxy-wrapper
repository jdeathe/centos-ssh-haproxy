#!/usr/bin/env bash

set -e

function __cleanup ()
{
	__delete_lock
}

function __create_lock ()
{
	if [[ -n ${lock_file} ]]
	then
		touch "${lock_file}"
	fi
}

function __delete_lock ()
{
	if [[ -e ${lock_file} ]]
	then
		rm -f "${lock_file}"
	fi
}

function __get_options ()
{
	local -r config_path="${1:-/etc/haproxy/haproxy.cfg}"
	local -r options="${4}"
	local -r pid_path="${2:-/run/haproxy.pid}"
	local -r stats_socket="${3:-/var/lib/haproxy/stats-1}"

	local pids

	if [[ -s ${pid_path} ]] \
		&& [[ -S ${stats_socket} ]] \
		&& ps axo command \
			| grep -qE '^/usr/sbin/haproxy '
	then
		pids="$(< "${pid_path}")"

		# reload
		printf -- \
			'-W -f %s -p %s -x %s -sf %s%s%s' \
			"${config_path}" \
			"${pid_path}" \
			"${stats_socket}" \
			"${pids}" \
			"${options:+" "}" \
			"${options}"

	else
		# start
		printf -- \
			'-W -f %s -p %s%s%s' \
			"${config_path}" \
			"${pid_path}" \
			"${options:+" "}" \
			"${options}"
	fi
}

function __is_valid_configuration ()
{
	local -r bin="${1:-/usr/sbin/haproxy}"
	local -r config_path="${2:-/etc/haproxy/haproxy.cfg}"

	${bin} \
		-c \
		-q \
		-f ${config_path}

	if [[ ${?} -ne 0 ]]
	then
		>&2 printf -- \
			'ERROR: Configuration error.\n'
		return 1
	fi

	return 0
}

function main ()
{
	local -r bin="/usr/sbin/haproxy"
	local -r bootstrap_state_file="/var/lib/misc/haproxy-bootstrap"
	local -r config_path="/etc/haproxy/haproxy.cfg"
	local -r lock_file="/var/lock/subsys/haproxy-wrapper"
	local -r nice="/bin/nice"
	local -r niceness="10"
	local -r stats_socket="/var/lib/haproxy/stats-1"

	local options
	local pid_path="/run/haproxy.pid"
	local verbose="false"

	# Parse options
	while [[ "${#}" -gt 0 ]]
	do
		case "${1}" in
			-v|--verbose)
				verbose="true"
				shift 1
				;;
		esac
	done

	if [[ -e ${lock_file} ]]
	then
		>&2 printf -- \
			'ERROR: %s lock detected - aborting\n' \
			"${0##*/}"
		exit 1
	fi

	trap "__cleanup" \
		INT TERM EXIT
	__create_lock

	options="$(
		__get_options
	)"

	until [[ -e ${bootstrap_state_file} ]]
	do
		sleep 0.1
	done

	if ! __is_valid_configuration \
		"${bin}" \
		"${config_path}"
	then
		exit 1
	fi

	__cleanup
	trap - \
		INT TERM EXIT

	if [[ ${verbose} == true ]]
	then
		if [[ -s ${pid_path} ]] \
			&& [[ -S ${stats_socket} ]] \
			&& ps axo command \
				| grep -qE '^/usr/sbin/haproxy '
		then
			printf -- \
				'INFO: %s reloading %s\n' \
				"${0##*/}" \
				"${bin##*/}"
		else
			printf -- \
				'INFO: %s starting %s\n' \
				"${0##*/}" \
				"${bin##*/}"
		fi
	fi

	# Process via eval to allow for quoted option values.
	eval "exec ${nice} \
		-n ${niceness} \
		${bin} \
		${options}"
}

main "${@}"
