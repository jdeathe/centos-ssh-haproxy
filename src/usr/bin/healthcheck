#!/usr/bin/env bash

set -e

function __has_nbproc_running ()
{
	local nbproc="$(
		sed -rn \
			-e 's~.*nbproc ([0-9]+).*~\1~p' \
			/etc/haproxy/haproxy.cfg
	)"
	local nbproc_running="$(
		ps axo command \
		| grep -cE '^/usr/sbin/haproxy '
	)"

	# Account for the master process
	(( nbproc_running -= 1 ))

	if [[ ${nbproc_running} -lt ${nbproc} ]]
	then
		return 1
	fi

	return 0
}

function main ()
{
	local rsyslogd_path="/sbin/rsyslogd"

	if [[ -f /usr/sbin/rsyslogd ]]
	then
		rsyslogd_path="/usr/sbin/rsyslogd"
	fi

	if ! ps axo command \
		| grep -qE '^/usr/bin/python /usr/bin/supervisord'
	then
		>&2 printf -- \
			'%s\n' \
			"supervisord not running."
		exit 1
	fi

	if ! ps axo command \
		| grep -qE "^${rsyslogd_path} "
	then
		>&2 printf -- \
			'%s\n' \
			"rsyslogd not running."
		exit 1
	fi

	if ! ps axo command \
		| grep -qE '^/usr/sbin/haproxy '
	then
		>&2 printf -- \
			'%s\n' \
			"haproxy not running."
		exit 1
	fi

	if ! __has_nbproc_running
	then
		>&2 printf -- \
			'%s\n' \
			"unexpected nbproc count."
		exit 1
	fi
}

main "${@}"
