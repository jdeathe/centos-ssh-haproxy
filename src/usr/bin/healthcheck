#!/usr/bin/env bash

set -e

function __get_system_timezone ()
{
	local -r default_value="${1:-UTC}"

	local value="${SYSTEM_TIMEZONE}"

	if ! __is_valid_system_timezone "${value}"
	then
		value="${default_value}"
	fi

	printf -- '%s' "${value}"
}

function __has_nbproc_running ()
{
	local nbproc="$(
		sed -rn \
			-e 's~.*nbproc ([0-9]+).*~\1~p' \
			/etc/haproxy/haproxy.cfg
	)"
	local nbproc_running="$(
		ps axo command \
		| grep -cE '^/usr/sbin/haproxy '
	)"

	if [[ ${nbproc_running} -lt ${nbproc} ]]
	then
		return 1
	fi

	return 0
}

function __is_valid_system_timezone ()
{
	__is_valid_zone "${@}"
}

function __is_valid_zone ()
{
	local zone="${1}"

	if [[ -n ${zone} ]] \
		&& [[ -f /usr/share/zoneinfo/${zone} ]]
	then
		return 0
	fi

	return 1
}

function main ()
{
	local -r system_timezone="$(
		__get_system_timezone
	)"
	local -r zone="$(
		system-timezone -qq
	)"

	local rsyslogd_path="/sbin/rsyslogd"

	if [[ -f /usr/sbin/rsyslogd ]]
	then
		rsyslogd_path="/usr/sbin/rsyslogd"
	fi

	if ! ps axo command \
		| grep -qE '^/usr/bin/python /usr/bin/supervisord'
	then
		>&2 printf -- \
			'%s\n' \
			"supervisord not running."
		exit 1
	fi

	if ! ps axo args \
		| grep -qE '^bash /usr/sbin/haproxy-wrapper'
	then
		>&2 printf -- \
			'%s\n' \
			"haproxy-wrapper not running."
		exit 1
	fi

	if [[ ${system_timezone} != "${zone}" ]]
	then
		>&2 printf -- \
			'%s\n' \
			"system-timezone zone mismatch."
		exit 1
	fi

	if ! ps axo command \
		| grep -qE "^${rsyslogd_path} "
	then
		>&2 printf -- \
			'%s\n' \
			"rsyslogd not running."
		exit 1
	fi

	if ! ps axo command \
		| grep -qE '^/usr/sbin/haproxy '
	then
		>&2 printf -- \
			'%s\n' \
			"haproxy not running."
		exit 1
	fi

	if ! __has_nbproc_running
	then
		>&2 printf -- \
			'%s\n' \
			"unexpected nbproc count."
		exit 1
	fi
}

main "${@}"
