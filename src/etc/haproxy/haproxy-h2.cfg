
global
	chroot /var/lib/haproxy
	group haproxy
	log 127.0.0.1 local2
	maxconn 17024
	# maxsslrate 144
	nbproc 4
	spread-checks 4
	ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
	stats socket /var/lib/haproxy/stats-1 mode 0600 level admin process 1
	stats socket /var/lib/haproxy/stats-2 mode 0600 level admin process 2
	stats socket /var/lib/haproxy/stats-3 mode 0600 level admin process 3
	stats socket /var/lib/haproxy/stats-4 mode 0600 level admin process 4
	tune.bufsize 16384
	tune.maxaccept 128
	tune.maxrewrite 1024
	tune.ssl.default-dh-param 2048
	tune.ssl.cachesize 320000
	tune.ssl.lifetime 300
	tune.ssl.maxrecord 1419
	tune.zlib.memlevel 9
	unix-bind prefix /var/lib/haproxy mode 0770 user haproxy group haproxy
	user haproxy

# ------------------------------------------------------------------------------
# Defaults
# ------------------------------------------------------------------------------

defaults
	bind-process 1
	default-server maxconn 1028 rise 3 fall 3 inter 5s downinter 2s fastinter 2s
	errorfile 400 /etc/haproxy/400.html.http
	errorfile 403 /etc/haproxy/403.html.http
	errorfile 408 /etc/haproxy/408.html.http
	errorfile 500 /etc/haproxy/500.html.http
	errorfile 502 /etc/haproxy/502.html.http
	errorfile 503 /etc/haproxy/503.html.http
	errorfile 504 /etc/haproxy/504.html.http
	log global
	maxconn 16384
	mode http
	option abortonclose
	option dontlognull
	option dontlog-normal
	option forwardfor except 127.0.0.0/8
	option httplog
	option http-server-close
	option redispatch
	option splice-auto
	retries 2
	timeout check 15s
	timeout client 40s
	timeout connect 4s
	timeout http-request 5s
	timeout http-keep-alive 15s
	timeout queue 120s
	timeout server 40s

cache static-assets
	max-age 120
	total-max-size 16

# ------------------------------------------------------------------------------
# Listeners
# ------------------------------------------------------------------------------

listen tls-termination
	balance roundrobin
	bind 0.0.0.0:443 nice 10 process 2 alpn h2,http/1.1 ssl no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets crt /etc/pki/tls/certs/localhost.crt crt /etc/pki/tls/certs/sni/
	bind 0.0.0.0:443 nice 10 process 3 alpn h2,http/1.1 ssl no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets crt /etc/pki/tls/certs/localhost.crt crt /etc/pki/tls/certs/sni/
	bind 0.0.0.0:443 nice 10 process 4 alpn h2,http/1.1 ssl no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets crt /etc/pki/tls/certs/localhost.crt crt /etc/pki/tls/certs/sni/
	bind-process 2-4
	maxconn 10240
	option tcp-smart-connect
	server tls-termination-2 /tls-termination-2.sock send-proxy-v2-ssl maxconn 10240
	server tls-termination-3 /tls-termination-3.sock send-proxy-v2-ssl maxconn 10240
	server tls-termination-4 /tls-termination-4.sock send-proxy-v2-ssl maxconn 10240

# ------------------------------------------------------------------------------
# Frontends
# ------------------------------------------------------------------------------

frontend http
	backlog 10240
	bind 0.0.0.0:80 nice 10
	maxconn 10240
	rate-limit sessions 2048
	# Force HTTPS
	redirect scheme https code 301 if !{ ssl_fc }

frontend https
	backlog 10240
	bind /tls-termination-2.sock accept-proxy maxconn 10240
	bind /tls-termination-3.sock accept-proxy maxconn 10240
	bind /tls-termination-4.sock accept-proxy maxconn 10240
	default_backend https
	maxconn 10240
	rate-limit sessions 2048

# ------------------------------------------------------------------------------
# Backends
# ------------------------------------------------------------------------------

backend https
	acl url_static capture.req.uri -m reg (?i)(?:\.(?:css|eot|gif|ico|jpe?g|js|png|svg|ttf|txt|woff2?))(?:\?.*)?$
	balance roundrobin
	fullconn 10240
	#http-response set-header Strict-Transport-Security max-age=15768000
	http-response cache-store static-assets
	http-request set-uri %[path] if url_static
	http-request cache-use static-assets if url_static
	http-request del-header Cookie if url_static
	http-request del-header Forwarded
	http-request del-header Proxy
	http-request set-header X-Forwarded-Port 443
	http-request set-header X-Forwarded-Proto https
	option httpchk HEAD / HTTP/1.1\r\nHost:\ localhost.localdomain\r\nConnection:\ close\r\nUser-Agent:\ HAProxy\r\nAccept-Encoding:\ gzip,\ deflate
	option forwardfor
	# HTTP backend servers
	server web_1 httpd_1:8443 port 8443 check
	server web_2 httpd_2:8443 port 8443 check
