#---------------------------------------------------------------------
# Example configuration for a possible web application.
#---------------------------------------------------------------------

global
    user haproxy
    group haproxy
    log 127.0.0.1 local0
    chroot /var/lib/haproxy
    maxconn 16384
    # SSL Termination is CPU intensive so need to rate limit to avoid failures
    maxsslrate 152
    tune.bufsize 16384
    tune.maxaccept 2048
    tune.maxrewrite 1024
    tune.ssl.default-dh-param 2048
    tune.zlib.memlevel 9
    spread-checks 4
    nbproc 1

    # SSL defaults
    # ssl-default-bind-ciphers ALL:!ADH:!EXPORT:!SSLv2:!RC4+RSA:+HIGH:!MEDIUM:!LOW
    # https://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_configurations
    ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
    ssl-default-bind-options no-sslv3

    # Enable stats unix socket
    stats socket /var/lib/haproxy/stats level admin user app-admin group app-admin

#---------------------------------------------------------------------
# Global Defaults
#---------------------------------------------------------------------

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option abortonclose
    option http-server-close
    option forwardfor except 127.0.0.0/8
    option redispatch
    retries 3
    timeout http-request 15s
    timeout queue 1m
    timeout connect 5s
    timeout client 1m
    timeout server 2m
    timeout http-keep-alive 15s
    timeout check 15s
    default-server maxconn 64

#---------------------------------------------------------------------
# Frontends
#---------------------------------------------------------------------

frontend http
    bind 0.0.0.0:80
    default_backend http-pool-1
    maxconn 10240

frontend https
    bind 0.0.0.0:443 ssl crt /etc/haproxy/certs/app-1.local.pem
    default_backend https-pool-1
    maxconn 10240

#---------------------------------------------------------------------
# Backends
#---------------------------------------------------------------------

backend http-pool-1
    # Force HTTPS
    #redirect scheme https if !{ ssl_fc }

    # acl stats_net src 127.0.0.0/8
    # stats enable
    # stats show-desc HTTP Backend pool-1
    # stats scope .
    # stats refresh 5s
    # stats hide-version
    # stats uri /haproxy?stats
    # stats http-request allow if stats_net
    # stats http-request deny
    option httpchk HEAD / HTTP/1.0\r\nUser-Agent:\ HAProxy
    option forwardfor
    reqadd X-Forwarded-Proto:\ http
    balance roundrobin
    fullconn 10240
    server app-1.1.1 ${HAPROXY_SERVER_ADDRESS_1}:8080 port 8080 check
    server app-1.2.1 ${HAPROXY_SERVER_ADDRESS_1}:8081 port 8081 check
    server app-1.3.1 ${HAPROXY_SERVER_ADDRESS_1}:8082 port 8082 check
    # cookie http-pool-1 insert indirect nocache httponly
    # server app-1.1.1 ${HAPROXY_SERVER_ADDRESS_1}:8080 port 8080 cookie app-1.1.1 check
    # server app-1.2.1 ${HAPROXY_SERVER_ADDRESS_1}:8081 port 8081 cookie app-1.2.1 check
    # server app-1.3.1 ${HAPROXY_SERVER_ADDRESS_1}:8082 port 8082 cookie app-1.3.1 check backup

backend https-pool-1
    # acl stats_net src 127.0.0.0/8
    # stats enable
    # stats show-desc HTTPS Backend pool-1
    # stats scope .
    # stats refresh 5s
    # stats hide-version
    # stats uri /haproxy?stats
    # stats http-request allow if stats_net
    # stats http-request deny
    option httpchk HEAD / HTTP/1.0\r\nUser-Agent:HAProxy
    option forwardfor
    reqadd X-Forwarded-Proto:\ https
    balance roundrobin
    fullconn 10240
    server app-1.1.1 ${HAPROXY_SERVER_ADDRESS_1}:8580 port 8580 check
    server app-1.2.1 ${HAPROXY_SERVER_ADDRESS_1}:8581 port 8581 check
    server app-1.3.1 ${HAPROXY_SERVER_ADDRESS_1}:8582 port 8582 check
    # cookie https-pool-1 insert indirect nocache httponly secure
    # server app-1.1.1 ${HAPROXY_SERVER_ADDRESS_1}:8080 port 8080 cookie app-1.1.1 check
    # server app-1.2.1 ${HAPROXY_SERVER_ADDRESS_1}:8081 port 8081 cookie app-1.2.1 check
    # server app-1.3.1 ${HAPROXY_SERVER_ADDRESS_1}:8082 port 8082 cookie app-1.3.1 check backup
